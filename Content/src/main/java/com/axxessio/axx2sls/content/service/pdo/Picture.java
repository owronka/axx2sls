package com.axxessio.axx2sls.content.service.pdo;

import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(tableName = "picture")
public class Picture extends Generic implements Comparable<Picture>{

    private String id;

    private String areaId;
    private String name;
    private Integer size;
    private Date date;
    private Long version;
    
    public Picture() {}

    public Picture(String newName, int newSize, Date newDate) {
    	this.name = newName;
        this.size = newSize;
        this.date = newDate;
        this.version = null;
    }

    @DynamoDBAutoGeneratedKey
    @DynamoDBHashKey(attributeName = "id")
    public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@DynamoDBAttribute(attributeName = "areaId")
    public String getAreaId() {
		return areaId;
	}

	public void setAreaId(String areaId) {
		this.areaId = areaId;
	}

	@DynamoDBAttribute(attributeName = "name")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@DynamoDBAttribute(attributeName = "size")
	public Integer getSize() {
		return size;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

	@DynamoDBAttribute(attributeName = "date")
	public Date getDate() {
		return date;
	}

	public void setDate(Date date) {
		this.date = date;
	}


    @DynamoDBVersionAttribute
    public Long getVersion() {
        return version;
    }
 
    public void setVersion(Long version) {
        this.version = version;
    }
    
	@Override
    public String toString() {
        return String.format(
                "Picture[id=%s, areaId='%s', name='%s', size='%d', date='%s']", id, areaId, name, size, date.toString());
    }

	@Override
	public int compareTo(Picture p) {
		return Integer.parseInt(this.id) - Integer.parseInt(p.id); 
	}
}